#自我保护模式正是一种针对网络异常波动的安全保护措施，使用自我保护模式能使Eureka集群更加的健壮、稳定的运行。
#自我保护机制的工作机制是如果在15分钟内超过85%的客户端节点都没有正常的心跳，那么Eureka就认为客户端与注册中心出现了网络故障，Eureka Server自动进入自我保护机制，此时会出现以下几种情况：
#1、Eureka Server不再从注册列表中移除因为长时间没收到心跳而应该过期的服务。
#2、Eureka Server仍然能够接受新服务的注册和查询请求，但是不会被同步到其它节点上，保证当前节点依然可用。
#3、当网络稳定时，当前Eureka Server新的注册信息会被同步到其它节点中。
#因此Eureka Server可以很好的应对因网络故障导致部分节点失联的情况，而不会像ZK那样如果有一半不可用的情况会导致整个集群不可用而变成瘫痪。
eureka:
  server:
    # 测试时关闭自我保护机制，保证不可用服务及时踢出，生产环境最好保持开启
    enable-self-preservation: false
  #实例ID
  instance:
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
spring:
  application:
    name: learn-cloud-eureka

---
spring:
  profiles: peer1
server:
  port: 8001
eureka:
  instance:
    hostname: peer1
#    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://peer2:8002/eureka/,http://peer3:8003/eureka/
---
spring:
  profiles: peer2
server:
  port: 8002
eureka:
  instance:
    hostname: peer2
#    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://peer1:8001/eureka/,http://peer3:8003/eureka/
---
spring:
  profiles: peer3
server:
  port: 8003
eureka:
  instance:
    hostname: peer3
#    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://peer1:8001/eureka/,http://peer2:8002/eureka/
